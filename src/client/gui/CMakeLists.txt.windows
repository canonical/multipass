# Copyright (C) Canonical, Ltd.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set_target_properties(dart_ffi PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS ON)
install(TARGETS dart_ffi DESTINATION bin/ COMPONENT multipass_gui)

set(MULTIPASS_GUI_EXECUTABLE multipass.gui.exe)
set(MULTIPASS_GUI_TARGET windows)
set(MULTIPASS_GUI_PREFIX ${MULTIPASS_GUI_TARGET}/${MULTIPASS_GUI_ARCH}/runner/Release)
set(MULTIPASS_GUI_BUNDLE_RELATIVE "")
set(MULTIPASS_GUI_EXEC_PATH_RELATIVE_TO_BUNDLE "")

set(MULTIPASS_GUI_BUILD_DIR ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
cmake_path(RELATIVE_PATH MULTIPASS_GUI_BUILD_DIR)

if (MULTIPASS_GUI_BUILD_DIR STREQUAL "")
  message(FATAL_ERROR "Build and source folders should be in the same drive")
endif()

set(MULTIPASS_GUI_PATH ${MULTIPASS_GUI_BUILD_DIR}/${MULTIPASS_GUI_PREFIX})
set(MULTIPASS_GUI_BUNDLE ${MULTIPASS_GUI_PATH}/${MULTIPASS_GUI_BUNDLE_RELATIVE})
set(MULTIPASS_GUI_SOURCE_DIR ${CMAKE_SOURCE_DIR}/src/client/gui)
set(MULTIPASS_GUI_LINK_NAME multipass.gui)
set(MULTIPASS_GUI_EXECUTABLE_FULL_PATH ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${MULTIPASS_GUI_PREFIX}/${MULTIPASS_GUI_BUNDLE_RELATIVE}/${MULTIPASS_GUI_EXEC_PATH_RELATIVE_TO_BUNDLE}/${MULTIPASS_GUI_EXECUTABLE})

file(GLOB_RECURSE MULTIPASS_GUI_SOURCE_FILES ${MULTIPASS_GUI_SOURCE_DIR}/lib/*.dart)

set(FLUTTER_BUILD_ARGS --release --suppress-analytics --verbose --build-name=${MULTIPASS_SEMANTIC_VERSION} --build-number=${MULTIPASS_BUILD_NUMBER})

add_custom_command(OUTPUT ${MULTIPASS_GUI_EXECUTABLE_FULL_PATH}
  DEPENDS ${MULTIPASS_GUI_SOURCE_FILES}
  WORKING_DIRECTORY ${MULTIPASS_GUI_SOURCE_DIR}
  COMMAND ${CMAKE_COMMAND} -E make_directory lib/generated
  COMMAND $<TARGET_FILE:protobuf::protoc> --plugin=protoc-gen-dart=${DART_PROTOC_PLUGIN} --dart_out=grpc:lib/generated -I ../../rpc ../../rpc/multipass.proto google/protobuf/timestamp.proto
  COMMAND ${FLUTTER_EXECUTABLE} config --build-dir=${MULTIPASS_GUI_BUILD_DIR}
  COMMAND ${FLUTTER_EXECUTABLE} build ${MULTIPASS_GUI_TARGET} ${FLUTTER_BUILD_ARGS}
  COMMAND ${FLUTTER_EXECUTABLE} config --build-dir=
)


add_custom_target(${MULTIPASS_GUI_EXECUTABLE} ALL
  DEPENDS ${MULTIPASS_GUI_EXECUTABLE_FULL_PATH}
)

set(FLUTTER_INSTALL_BUNDLE "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${MULTIPASS_GUI_PREFIX}/${MULTIPASS_GUI_BUNDLE_RELATIVE}/${MULTIPASS_GUI_EXEC_PATH_RELATIVE_TO_BUNDLE}/")

install(DIRECTORY
  ${FLUTTER_INSTALL_BUNDLE}
  DESTINATION bin/
  COMPONENT multipass_gui
)
